造机器假说

我想了想,要不要把我总结到的解决方案写下来.除了可以帮助自己理清思路,或许也可以给别人启发思路.
人的生存能力太弱,怎么办?想办法加强自己,或者与他人组成组织,这是两个不同的方向,其主要目的是为了生存,或更好地生存.
因为人要生存,独自生存又太弱,机能有限,无法统筹所有,与人协作又有太多冗余的关节会出现阻碍,以至于效率低下.那怎么办?
我总结的方法是---造机器.
我以前悟出了一点(或许已经有人想过了),即-用空双手造出机器A,然后用机器A造出机器B,用机器A和B造出机器C,用机器[A\B\C]造出机器D......
其规律是-用工具X创造工具Y,通过y改进x(或通过x改进y).这就像一个重复的,循环的,递归的形式.
但技术太难,普通人只是需要一个解决自身问题的简易方法和工具,而不需要付出多么艰难复杂的学习成本,人们只是需要一个高效率的生存方式.

人在大自然中的生存太艰难,虽然人组成了社会这一种组织来帮助人生存,但是社会却不是一定有用的,社会或许有一定的价值,但不是对每个人都能提供帮助.我们可以看到,依然有人生存艰难,那怎么办呢?况且,我们也看到了,社会这种工具有时候也会失效,并且,即便是有效的情况下,能给与每个人的力量也有限得很,不足以支撑每个人进行生存,甚至某些时候,连基本生存需求都无法解决(即-衣食住行性,生老病死娱).求人不如求己,想办法利用手边能使用的工具,现阶段人类是智人的后代,我们的突出特点或者我们的生存能力之证明就是使用工具,我们学会使用火,学会使用双手做出简单石斧,更简单的例子,如我们使用筷子或刀叉来食用食物,为何不直接使用手?因为我们发现使用筷子或刀叉能更有效地更卫生更健康地帮助我们享用食物,这一过程中,无形地,我们就相当于"用空双手造出机器A,然后用机器A造出机器B",筷子或刀叉即是机器B,我们用机器B这种工具帮助了我们自己更好地生存.

这一过程即是人类得以进化的简单写照,即-用工具X创造工具Y,通过y改进x(或通过x改进y).只要重复这一过程,我们就得以继续强化我们的生存,而事实上,现实中,我们也确实是在这样地行为.所以我们应该善用机器帮助我们生存和发展.

那么,重点就是造机器,所以第一个问题就是;什么是机器呢?怎么造呢?
我说下我的见解,这只代表我个人的理解范畴和理解程度.我将机器进行哲学化划分,分成形而上和形而下,分成形和神,进行二元分化.机器有现实中看到的摸到的使用金属或其他材质组成的元器件进行精密的逻辑连接构成的机器,有无法看到听到触到,但是可以通过思维感知、想象、分析、结构到的机器.这里将可以看到的摸到的机器称之为[机器之形],将无法看到听到触到的机器称之为[机器之神],分别表示机器的形态和神态.机器存在于这两种态之中.
可能有些人会有疑问,是先有这二元中的哪一元出现,这个就像鸡生蛋,蛋生鸡的问题,根据历史唯物主义来思考和判断,是先有可看触摸的机器-即-机器之形-形态,有了可以仿照的形态,于是就得出可以利用其过程的神态,根据神态创造出新的形态.原始人使用火与石斧,皆不是从原始无中创造出来的,而是模仿大自然中已经发生过了的事件,比如树林着火,物件对象A撞击物件对象B发生物理现象或化学反应.原始人通过观察、接触、搜索、汇总、实验、实践找到这一过程,从中模仿,于是学会使用火,还造出了石斧.
我很想说成是先有神态后有形态,但很遗憾,人类是在大自然之后而不是在大自然之前出现的.人类的历史-即时间过程,远远比大自然的时间过程短暂得多.人类不是根据'原有'的神态而知道怎么创造出形态的,而是根据'已有'的神态而学会创造出新的形态的.
那我们现阶段的人类怎么利用这已有的神态(即-知识、经验、学说、想法、想象)创造出新的形态来呢?即-怎么造机器呢?
因为过去,人类已经创造了数不尽的已有机器这个基础,也就是已经创造出了很多新的形态(即-用空双手造出机器A,然后用机器A造出机器B,用机器A和B造出机器C,用机器[A\B\C]造出机器D......),那么,人类现在可以利用这一过程(即规律-用工具X创造工具Y,通过y改进x(或通过x改进y))在已有机器的基础上创造新的机器.我目前找到的方法是,编程,用计算机程序链的方式进行神态上的机器之设计,通过设计出的机器之神这一工具后,然后用这个工具去造出机器之形,即-可以看触摸的机器,而这又是新的工具.我们用这一新的工具就可以解决我们的问题或再次创造新的工具.
计算机机器分软和硬两部分,集人类利用工具历史之大成,计算机的这种二元分化与机器之形、机器之神之分有异曲同工之妙.形神分离(或者说模块化)更有助于我们设计机器的细节之精密部分,使我们设计出可靠能用的机器的成功率大增.

那么,编程又是怎么回事呢?什么是编程,怎么编程呢?
编程抛开计算机的工作过程来谈,它存在于我们整个人类社会与人类个体的所有事件之中,狭义地理解编程,就是给计算机编写怎么工作的过程,狭义的理解被限定在计算机的范畴内,而广义地理解编程,则与我们生活,怎么生存息息相关,准确地说,人的所有言论和行为皆是已经被编程过了的,或将要发生的言论和行为也即将被编程,人类活动的所有过程即是编程本身,人在自己给自己编程,如果不编程,人将不知道怎么活动,人利用这一过程总结出经验和知识,所以,人学会怎么建造组织,人创造了社会,社会即是人的编程实录.社会中的组织形成各种不同的具有很强实用性的功能,而功能就是编程的实际体现,人类通过具体的功能创造新的组织和功能,进而让新的工具之产生得以实现,那么,新的机器之存在就得以成为可能.
前面说了火与石斧两样工具,但人类除了这两样工具以外,还创造了很多衍生工具,人类的工具体系实在是太庞大,原生的和新生的混交组织在一起,我们不可能用完用尽,我们只能选择最适合自己的工具,那么,还有什么工具能方便我们编程呢?答案是-语言.人类最原始的工具之一就是语言,人类除了学会用火与石斧以外,还学会了使用语言进行诸如交谈;个体与个体之间发送信息和传递消息,描述;总结观察到的听到的触到的现象,表示;创造各种类型的词汇用以指代某样具体的事物或事件,记录;搜集研究语言的过程所产生的结果.而语言就是编程的重要载体,我们目前找到的方法就是通过语言这种工具来实现编程,通过语言来表达我们的'想方设法',去构建机器的基本组件来设计精密的机器逻辑连接,而实现用工具建造机器的实际操作.这就是使用语言来实现编程的基本逻辑.本质上,它是模仿人类自身的生存活动之过程而出现的一种工具.即机器之神态的内在驱动表现之结果.广义上,通过语言来实现编程是社会功能的一部分.

在计算机中用语言来编程,为此,人类中的西方人,欧美人创造了程序语言,或者说编程语言,来实现编程,创造出机器的神态,然后通过机器的神态这种工具创造出机器之形,用机器的神态驱使机器之形产生具体的功能,进而新的工具又诞生了.
因此,编程语言就是非常重要的工具,它能让我们与已有的机器进行交谈、描述、表示、记录.而人种的不一样,决定了我们创造的工具的不一样,和我们创造之原理也不一样,因为我们的语言不一样,我们思考的方式就不一样,我研究过汉语与英语的互译,发现人们用英语表达后,与用汉语表达是不一样的,意思会发生变化,那么,这就存在着无法统一翻译意义之标准的客观现实,毕竟,我们的语言和字符与西方人的语言与字符,其创造之源头是不一样的,汉语的笔画与字型字义,英语的词根来源,均是两种不同的语言源模型,在很多时候,我们是无法完全地利用基于英语字符的编程语言的,那么我们就无法准确地进行交谈、描述、表示、记录我们脑子里想的程序,这就让我们用工具造机器的效率和能力大打折扣,毕竟语言也承载了文化,文化冲突在脑子里(这是客观存在的,毕竟不同人种已经用他们的母语语言和文化给自己脑子进行了编程,将生存方式固化),会逐渐让我们失去创造力,这是最危险的,如果我们不能用工具创造机器,我们将丧失生存能力,进而被淘汰.而人不可能有两个脑子去容纳别的语言体系,我们能做的就是为自己的脑子创造出新的适合自己的工具.即-设计属于本种族适用的母语编程语言.简单就能高效,复杂必定低效.而人的一生太短暂,时间太少,能做的事有限,我们应该尽可能地选择简单的有利于自己生存的方式和工具.因为有迭代的现象产生,不管是对于人类,种群还是大自然来说,所以我们应该尽可能地使用自己的原生资源进行迭代,而不是依靠别的种族的生存活动.
迭代自己的资源,迭代的结果就是自己的,迭代别的种族的资源,迭代结果自然也是别人的,并且,自己的资源还会源源不断地输送到别的种族,而大自然中,不同种族存在着竞争,如果自己种族的资源不断减少,而无实质性地增加,那么,这个种族必定越来越弱,最后消亡.资源,除了物质资源,还有精神资源.我们应该尽可能地模仿别的种族的物质资源和精神资源来塑造自己种族的一切,用自己种族的物质资源和精神资源去建造,而不是依赖和使用别的种族的物质资源和精神资源.为了保持生物和种族多样性,这个规则适用于地球上所有的生物.

基于以上结论,我思考后,得出应该创造中文的、汉语的编程语言,并且也评论过很多关于编程的文章,诸如以下这样的善意劝告;
"大力宣传和发展中文编程语言,中文编译系统,中文指令集,要逐渐迭代到全中文环境,此举重在未来民族之兴,要尽量实现,将程序逻辑,算法,通过汉字字符进行表示.舍弃英文单词字符等不利于使用汉字的民族进行程序设计.要让更多人进入编程行业,零基础零门槛掌握编程技能,丰富中文汉语言文化建造程序的生态,量变质变,掌握未来发展先机."
但收效甚微,我由此感到生死存亡的危机感和焦虑感,因为得到的回复,大多是偏向于依赖和使用别的种族的物质资源和精神资源,并且回复者的态度还相当的贬低和讽刺自己的原生种族之文化与文字和语言,即-母语.为什么呢?他们为何会这样?这让我感到希望渺茫,我觉得这样下去是不行的,于是我自己动手开始寻找编译器相关的知识,编译器就是语言翻译器,要保持语意和语义不出现歧义,那么,必定是要让所创造的各种语言在一个种族的文化范畴内,编译器并不能做到跨不同种族的不同文化之间的语言进行翻译.这是我研究编译后得出的简单结论.虽然逻辑与算法在编程中是占有相当重要的地位,但是不同的文化会催生出不同的语言,不同的语言又携带着不同的逻辑和算法,逻辑形式和随之而生的算法与别的种族会产生难以逾越的鸿沟,这将大大消弱自己种族的编程能力,进而其创造机器的能力也大化小小化无.希望我总结到的观点能给本种族的人一定的警醒和启示.

我目前找到的可行性研究是,在llvm上做转移开发,llvm是编译器系统,是别的种族设计好的编程语言翻译器,它分三段式结构,分前中后,利用了虚拟机器的原理,自己设计了一套指令集系统作为中段部分,这个中段其实就相当于一台虚拟的计算机器,它会把前端的编程语言之程序翻译为这台虚拟机器的指令供其虚拟CPU执行,然后把执行后的逻辑指令传递给后端汇编器进行真实CPU上的汇编计算,而前端部分则是各种编程语言处理字符表示的翻译规则,这个规则的运行过程就是大化小,例如分解质因数一样,将整段整段的字符表示的程序代码逐渐一层一层化解为简单的单个操作,这些极为简单的操作就可以与指令系统中的汇编指令一一对应,这个过程中,汇编器就可以控制汇编指令加工那些简单的操作步骤,比如用移动指令移动某一寄存器到另一寄存器去表示加或减.对于CPU这种机器来说,只有上亿之手在操作信号(即二进制、指令、数据、控制)的过程动作,对于人来说才有减加乘除这种逻辑或更复杂的逻辑,二进制、指令、数据、控制也是对于人来说的,因为人才能理解这些字符表示的词汇代表的意义.我目前的设想就是基于llvm开发一个前端,这个前端就是一种编程语言,这个编程语言的语法规则我想用中文和汉字来表示其字符,llvm本质上是一个工具集,我们只要利用这个工具就能让它生成一个前端,llvm的那些对编程语言的编译规则,它自己已经实现好了,我们只要用即可.不过我能力有限,如果有别的开发者愿意用这个思路创造中文编程语言,我会非常欣赏和开心,也希望更多人能参与进来一起开发,壮大开发的力量,当力量充足以后,就可以逐渐迭代到全中文环境,包括编译器系统的中文化,操作系统的中文化,以及常用命令行程序的中文化.
这样做的结果就是,让更多本种族的人进入编程行业,零基础零门槛掌握编程技能,熟练使用编程这种工具,造出新的机器,解决和改进我们面临的各种生活难题,改进我们的工具,让我们生存的更好.并且,最重要的是能改进我们的生产力,试想自动化的全面普及,不用住高价房成为房奴,不用再天价医疗,获取食材更有效率,生殖繁衍创造更多的机器来辅助进行,人们不用再为了恋爱婚姻家庭中谁承担责任而争执,进而矛盾家破人亡.我们能更好地进化,和创造出更先进的工具,移民其它行星将成为轻易实现的可能.这一切的基础,就是要让更多的人参与进来,只靠现在行业中的从业者是远远不够的,因为现在这些从业者,从某种程度上说,创造力在慢慢枯竭,所以我们需要更多智慧帮助我们产生新的机遇和探索发现突破性产品里程碑技术的几率.